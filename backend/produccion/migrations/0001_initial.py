# Generated by Django 5.2 on 2025-09-17 16:27

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cultivos', '0001_initial'),
        ('parcelas', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PrediccionCosecha',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_prediccion', models.DateField(default=django.utils.timezone.now, verbose_name='Fecha de predicción')),
                ('temporada_objetivo', models.CharField(max_length=20, verbose_name='Temporada objetivo')),
                ('rendimiento_predicho', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Rendimiento predicho (kg/ha)')),
                ('confianza_prediccion', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)], verbose_name='Confianza de la predicción (0-1)')),
                ('rango_minimo', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Rango mínimo')),
                ('rango_maximo', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Rango máximo')),
                ('modelo_utilizado', models.CharField(choices=[('linear', 'Regresión Lineal'), ('random_forest', 'Random Forest'), ('xgboost', 'XGBoost'), ('neural_network', 'Red Neuronal')], max_length=20, verbose_name='Modelo utilizado')),
                ('parametros_modelo', models.JSONField(blank=True, null=True, verbose_name='Parámetros del modelo')),
                ('rendimiento_real', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Rendimiento real obtenido')),
                ('precision_prediccion', models.FloatField(blank=True, null=True, verbose_name='Precisión de la predicción (%)')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('cultivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicciones', to='cultivos.cultivo', verbose_name='Cultivo')),
                ('parcela', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicciones', to='parcelas.parcela', verbose_name='Parcela')),
            ],
            options={
                'verbose_name': 'Predicción de Cosecha',
                'verbose_name_plural': 'Predicciones de Cosecha',
                'ordering': ['-fecha_prediccion'],
            },
        ),
        migrations.CreateModel(
            name='RegistroProduccion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_registro', models.DateField(db_index=True, default=django.utils.timezone.now, verbose_name='Fecha de registro')),
                ('temporada', models.CharField(db_index=True, max_length=20, verbose_name='Temporada')),
                ('cantidad_kg', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Cantidad producida (kg)')),
                ('rendimiento_hectarea', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Rendimiento por hectárea (kg/ha)')),
                ('calidad', models.CharField(blank=True, choices=[('A', 'Excelente'), ('B', 'Buena'), ('C', 'Regular'), ('D', 'Deficiente')], max_length=1, null=True, verbose_name='Calidad')),
                ('temperatura_promedio', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-50), django.core.validators.MaxValueValidator(60)], verbose_name='Temperatura promedio (°C)')),
                ('precipitacion_mm', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Precipitación (mm)')),
                ('humedad_relativa', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Humedad relativa (%)')),
                ('desviacion_esperada', models.FloatField(blank=True, null=True, verbose_name='Desviación del rendimiento esperado')),
                ('anomalia_detectada', models.BooleanField(default=False, verbose_name='Anomalía detectada')),
                ('notas_anomalia', models.TextField(blank=True, null=True, verbose_name='Notas sobre anomalías')),
                ('datos_adicionales', models.JSONField(blank=True, null=True, verbose_name='Datos adicionales')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Fecha de actualización')),
                ('cultivo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_produccion', to='cultivos.cultivo', verbose_name='Cultivo')),
                ('parcela', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_produccion', to='parcelas.parcela', verbose_name='Parcela')),
            ],
            options={
                'verbose_name': 'Registro de Producción',
                'verbose_name_plural': 'Registros de Producción',
                'ordering': ['-fecha_registro'],
                'indexes': [models.Index(fields=['parcela', 'fecha_registro'], name='produccion__parcela_61c024_idx'), models.Index(fields=['cultivo', 'temporada'], name='produccion__cultivo_ce4030_idx'), models.Index(fields=['anomalia_detectada'], name='produccion__anomali_3d893a_idx')],
            },
        ),
    ]
