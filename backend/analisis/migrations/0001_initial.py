# Generated by Django 5.2 on 2025-09-17 16:28

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cultivos', '0001_initial'),
        ('parcelas', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalisisComparativo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_analisis', models.CharField(max_length=200, verbose_name='Nombre del análisis')),
                ('descripcion', models.TextField(blank=True, null=True, verbose_name='Descripción')),
                ('tipo_analisis', models.CharField(choices=[('t_test', 'Prueba T de Student'), ('mann_whitney', 'Prueba Mann-Whitney U'), ('anova', 'Análisis de Varianza (ANOVA)'), ('kruskal_wallis', 'Prueba Kruskal-Wallis')], max_length=20, verbose_name='Tipo de análisis')),
                ('temporada', models.CharField(blank=True, max_length=20, null=True, verbose_name='Temporada')),
                ('fecha_inicio', models.DateField(blank=True, null=True, verbose_name='Fecha de inicio')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de fin')),
                ('estadistico', models.FloatField(verbose_name='Estadístico de prueba')),
                ('p_valor', models.FloatField(verbose_name='Valor p')),
                ('nivel_significancia', models.FloatField(default=0.05, verbose_name='Nivel de significancia')),
                ('diferencia_significativa', models.BooleanField(verbose_name='Diferencia significativa')),
                ('resultados_detallados', models.JSONField(verbose_name='Resultados detallados')),
                ('fecha_analisis', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha del análisis')),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('cultivos', models.ManyToManyField(related_name='analisis_comparativos', to='cultivos.cultivo', verbose_name='Cultivos comparados')),
            ],
            options={
                'verbose_name': 'Análisis Comparativo',
                'verbose_name_plural': 'Análisis Comparativos',
                'ordering': ['-fecha_analisis'],
            },
        ),
        migrations.CreateModel(
            name='AnalisisSeriesTemporal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_inicio', models.DateField(verbose_name='Fecha de inicio')),
                ('fecha_fin', models.DateField(verbose_name='Fecha de fin')),
                ('total_registros', models.IntegerField(verbose_name='Total de registros')),
                ('tipo_tendencia', models.CharField(choices=[('creciente', 'Tendencia Creciente'), ('decreciente', 'Tendencia Decreciente'), ('estable', 'Tendencia Estable'), ('ciclica', 'Tendencia Cíclica')], max_length=20, verbose_name='Tipo de tendencia')),
                ('pendiente', models.FloatField(verbose_name='Pendiente de la tendencia')),
                ('r_cuadrado', models.FloatField(verbose_name='Coeficiente R²')),
                ('rendimiento_promedio', models.FloatField(verbose_name='Rendimiento promedio')),
                ('desviacion_estandar', models.FloatField(verbose_name='Desviación estándar')),
                ('coeficiente_variacion', models.FloatField(verbose_name='Coeficiente de variación')),
                ('rendimiento_minimo', models.FloatField(verbose_name='Rendimiento mínimo')),
                ('rendimiento_maximo', models.FloatField(verbose_name='Rendimiento máximo')),
                ('outliers_detectados', models.IntegerField(default=0, verbose_name='Outliers detectados')),
                ('outliers_detalle', models.JSONField(blank=True, null=True, verbose_name='Detalle de outliers')),
                ('analisis_temporadas', models.JSONField(blank=True, null=True, verbose_name='Análisis por temporadas')),
                ('fecha_analisis', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha del análisis')),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('cultivo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cultivos.cultivo', verbose_name='Cultivo')),
                ('parcela', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analisis_series', to='parcelas.parcela', verbose_name='Parcela')),
            ],
            options={
                'verbose_name': 'Análisis de Series Temporal',
                'verbose_name_plural': 'Análisis de Series Temporales',
                'ordering': ['-fecha_analisis'],
            },
        ),
        migrations.CreateModel(
            name='ClasificacionRendimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_clasificacion', models.CharField(max_length=200, verbose_name='Nombre de la clasificación')),
                ('algoritmo_utilizado', models.CharField(choices=[('percentiles', 'Clasificación por Percentiles'), ('kmeans', 'K-Means Clustering'), ('quartiles', 'Clasificación por Cuartiles'), ('zscore', 'Clasificación por Z-Score')], max_length=20, verbose_name='Algoritmo utilizado')),
                ('temporada', models.CharField(blank=True, max_length=20, null=True, verbose_name='Temporada')),
                ('parametros_algoritmo', models.JSONField(verbose_name='Parámetros del algoritmo')),
                ('resultados_clasificacion', models.JSONField(verbose_name='Resultados de la clasificación')),
                ('estadisticas_generales', models.JSONField(verbose_name='Estadísticas generales')),
                ('fecha_clasificacion', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Fecha de clasificación')),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('cultivo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='cultivos.cultivo', verbose_name='Cultivo filtrado')),
            ],
            options={
                'verbose_name': 'Clasificación de Rendimiento',
                'verbose_name_plural': 'Clasificaciones de Rendimiento',
                'ordering': ['-fecha_clasificacion'],
            },
        ),
    ]
